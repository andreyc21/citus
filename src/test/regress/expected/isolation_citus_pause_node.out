Parsed test spec with 2 sessions

starting permutation: s1-begin s1-pause-node s2-begin s2-insert s2-end s1-end
step s1-begin:
    BEGIN;

step s1-pause-node:
 SELECT pg_catalog.citus_pause_node(2);

citus_pause_node
---------------------------------------------------------------------

(1 row)

step s2-begin:
 BEGIN;

step s2-insert:
 -- Set statement_timeout for the session (in milliseconds)
 SET statement_timeout = 1000; -- 1 seconds
 SET client_min_messages = 'notice';
 -- Variable to track if the INSERT statement was successful
 DO $$
 DECLARE
  insert_successful BOOLEAN := FALSE;
 BEGIN
  -- Execute the INSERT statement
  insert into employee values(11,'e11',3);
  -- If we reach this point, the INSERT statement was successful
  insert_successful := TRUE;
  IF insert_successful THEN
   RAISE NOTICE 'INSERT statement completed successfully. This means that citus_pause_node could not get the lock.';
  END IF;
 -- You can add additional processing here if needed
 EXCEPTION
  WHEN query_canceled THEN
   -- The INSERT statement was canceled due to timeout
   RAISE NOTICE 'query_canceled exception raised. This means that citus_pause_node was able to get the lock.';
  WHEN OTHERS THEN
   -- Any other exception raised during the INSERT statement
   RAISE;
 END;
 $$
 LANGUAGE plpgsql;
 <waiting ...>
step s2-insert: <... completed>
s2: NOTICE:  query_canceled exception raised. This means that citus_pause_node was able to get the lock.
step s2-end:
 COMMIT;

step s1-end:
    COMMIT;

